@model Repository.Models.UserLeavePolicy

@{
  ViewBag.Title = "Create";
  Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- DataTables -->
<link rel="stylesheet" href="../../plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="../../plugins/datatables-responsive/css/responsive.bootstrap4.min.css">

<!-- left column -->
<div class="col-md-6">
  <!-- general form elements -->
  <div class="card card-primary">
    <div class="card-header">
      <h3 class="card-title">UserLeavePolicy</h3>
    </div>
    <!-- /.card-header -->
    <!-- form start -->

    @using (Html.BeginForm())
    {
      @Html.AntiForgeryToken()

  <div class="card-body">
     
    <form>

      <div class="form-group">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
          @Html.LabelFor(model => model.UserId, "User Id", htmlAttributes: new { @class = "control-label col-md-2" })

          @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
          @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })

        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.WeeklyOffDays, htmlAttributes: new { @class = "control-label col-md-2" })

          @*@Html.EditorFor(model => model.WeeklyOffDays, new { htmlAttributes = new { @class = "form-control" } })*@

          <select class="selectpicker" id="multiselect" multiple data-live-search="false">
            <option value="1">Saturday</option>
            <option value="2">Sunday</option>
            <option value="3">Monday</option>
            <option value="4">Tuesday</option>
            <option value="5">Wednesday</option>
            <option value="6">Thursday</option>
            <option value="7">Friday</option>
          </select>
          @Html.ValidationMessageFor(model => model.WeeklyOffDays, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.AnnualOffDays,"Annual Off Days", htmlAttributes: new { @class = "control-label col-md-2" })

          @*@Html.EditorFor(model => model.AnnualOffDays, new { htmlAttributes = new { @class = "form-control" } })*@
          (1) Please chosse file. This file should contain Annual off days record in three comma separated columns (CSV) {No,Date,Description} format.<br />

          <input type="file" id="FileUpload1" />
          @*       @Html.ValidationMessageFor(model => model.AnnualOffDays, "", new { @class = "text-danger" })*@


        </div>
        <div class="col-md-10">
          (2) Click to upload file<br />
          <input type="button" id="btnUpload" value="Upload file" />
        </div>




        <div id="NewData">
          @{
            if (ViewBag.AnnualLeaves != null)
            {
              Html.RenderPartial("_DisplayAnnualLeaves");
            }
          }
        </div>
        <div class="form-group">
          @Html.LabelFor(model => model.FiscalYearStart,"Fiscal Year Start", htmlAttributes: new { @class = "control-label col-md-2" })

          @Html.EditorFor(model => model.FiscalYearStart, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.FiscalYearStart, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.FiscalYearEnd, htmlAttributes: new { @class = "control-label col-md-2" })

          @Html.EditorFor(model => model.FiscalYearEnd, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.FiscalYearEnd, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.FiscalYearPeriod, htmlAttributes: new { @class = "control-label col-md-2" })

          @Html.EditorFor(model => model.FiscalYearPeriod, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.FiscalYearPeriod, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
          </div>
        </div>
      </div>
    </form>
  </div>

    }


    <div>
      @Html.ActionLink("Back to List", "Index")
    </div>


    <table id="example" class="display" cellspacing="0" width="100%">
      <thead>
        <tr>
          <th></th>
          <th>First name</th>
          <th>Last name</th>
          <th>Position</th>
          <th>Office</th>
          <th width="18%">Start date</th>
          <th>Salary</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td></td>
          <td>Waqas</td>
          <td>Javaid</td>
          <td>Manager</td>
          <td>BiznisHike</td>
          <td>1-1-19</td>
          <td>200000</td>
        </tr>
      </tbody>
      @*<tfoot>
          <tr>
            <td></td>
            <td>1</td>
            <td>1</td>
            <td>1</td>
            <td>1</td>
            <td>1</td>
            <td>1</td>
          </tr>
        </tfoot>*@
    </table>


    <script>
      $(document).ready(function () {

        $('#btnUpload').click(function () {

          // Checking whether FormData is available in browser
          if (window.FormData !== undefined) {

            var fileUpload = $("#FileUpload1").get(0);
            var files = fileUpload.files;

            // Create FormData object
            var fileData = new FormData();

            // Looping over all files and add it to FormData object
            for (var i = 0; i < files.length; i++) {
              fileData.append(files[i].name, files[i]);
            }

            // Adding one more key to FormData object
            //fileData.append('username', 'Manas');
            //alert('1');
            $.ajax({
              url: '/UserLeavePolicies/UploadFiles',
              type: "POST",
              contentType: false, // Not to set any content header
              processData: false, // Not to process data
              data: fileData,
              success: function (result) {
                //alert(result);
                //alert('4');
                $("#NewData").html(result);
              },
              error: function (err) {
                alert(err.statusText);
                //alert('5');
              }
            });
          } else {
            alert("FormData is not supported.");
          }
        });
      });
    </script>



    @section Scripts {
      @Scripts.Render("~/bundles/jqueryval")
    }
