@model Repository.Models.Leave

@{
  ViewBag.Title = "Edit";
  Layout = "~/Views/Shared/_Layout.cshtml";
}


 



<!-- left column -->
<div class="col-md-6">
  <!-- general form elements -->
  <div class="card card-primary">
    <div class="card-header">
      <h3 class="card-title">Edit Leave Response</h3>
    </div>
    <!-- /.card-header -->
    <!-- form start -->


    @using (Html.BeginForm())
    {
      @Html.AntiForgeryToken()


  <div class="card-body">



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
      @Html.LabelFor(model => model.UserId, "User", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
      @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.LeaveTypeId, "Leave Type", htmlAttributes: new { @class = " " })

      @Html.DropDownList("LeaveTypeId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
      @Html.ValidationMessageFor(model => model.LeaveTypeId, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Reason, "Reason", htmlAttributes: new { @class = " " })
    
      @Html.TextAreaFor(model => model.Reason , new{@class = "form-control", rows="3", disabled = "disabled" })
      @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })

    </div>



    <div class="form-group">
      @Html.LabelFor(model => model.StartDate, "Start Date", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
      @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.EndDate, "End Date", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
      @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })

    </div>


    <div class="form-group">
      @Html.LabelFor(model => model.TotalDays, "Total Days", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.TotalDays, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
      @Html.ValidationMessageFor(model => model.TotalDays, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.EmergencyContact, "Emergency Contact", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.EmergencyContact, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
      @Html.ValidationMessageFor(model => model.EmergencyContact, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.LineManager1, "Line Manager 1", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.LineManager1, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.LineManager1, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.LineManager2, "Line Manager 2", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.LineManager2, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.LineManager2, "", new { @class = "text-danger" })

    </div>




    <div class="form-group">
      @Html.LabelFor(model => model.IsAccepted1, "Status Line Manager 1", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.IsAccepted1, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.IsAccepted1, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Remarks1, "Remarks 1", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.Remarks1, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Remarks1, "", new { @class = "text-danger" })

    </div>






    <div class="form-group">
      @Html.LabelFor(model => model.IsAccepted2, "Status Line Manager 2", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.IsAccepted2, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.IsAccepted2, "", new { @class = "text-danger" })

    </div>





    <div class="form-group">
      @Html.LabelFor(model => model.Remarks2, "Remarks 2", htmlAttributes: new { @class = " " })

      @Html.EditorFor(model => model.Remarks2, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Remarks2, "", new { @class = "text-danger" })

    </div>







    <div class="form-group">
      <div class="class=" card-footer">
        <input type="submit" value="Save" class="btn btn-primary" />
      </div>
    </div>
    <br />
    @Html.ActionLink("Back to List", "Index")
  </div>
 
    }
  </div>



</div>

 



@*@section Scripts {
      @Scripts.Render("~/bundles/jqueryval")
  }*@

